// backend/src/config/db.js
const mongoose = require("mongoose");

/**
 * ‚öôÔ∏è K·∫øt n·ªëi MongoDB Atlas t·ªëi ∆∞u hi·ªáu su·∫•t:
 * - maxPoolSize: gi·ªõi h·∫°n s·ªë k·∫øt n·ªëi ƒë·ªìng th·ªùi ƒë·ªÉ tr√°nh ngh·∫Ωn
 * - serverSelectionTimeoutMS: th·ªùi gian ch·ªù ch·ªçn server
 * - socketTimeoutMS: th·ªùi gian ch·ªù khi k·∫øt n·ªëi l√¢u
 * - Log query ch·∫≠m >200ms ƒë·ªÉ d·ªÖ theo d√µi hi·ªáu nƒÉng
 */
const connectDB = async () => {
  try {
    await mongoose.connect(process.env.MONGO_URI, {
      maxPoolSize: 10,             // Gi·ªØ 10 connection t√°i s·ª≠ d·ª•ng
      serverSelectionTimeoutMS: 8000,
      socketTimeoutMS: 45000,
    });

    console.log("‚úÖ MongoDB connected successfully!");
  } catch (error) {
    console.error("‚ùå MongoDB connection failed:", error.message);
    process.exit(1);
  }

  /**
   * üê¢ Log query ch·∫≠m cho Mongoose v7+
   * D√πng callback thay v√¨ this.on("end")
   * ƒë·ªÉ tr√°nh l·ªói ‚Äúthis.on is not a function‚Äù
   */
  mongoose.set("debug", (collectionName, method, query, doc, options) => {
    const start = Date.now();
    // T·∫°o log ngay khi query k·∫øt th√∫c
    setImmediate(() => {
      const duration = Date.now() - start;
      if (duration > 200) {
        console.warn(
          `üê¢ Slow query detected: ${collectionName}.${method} (${duration}ms)`,
          { query, options }
        );
      }
    });
  });
};

module.exports = connectDB;
