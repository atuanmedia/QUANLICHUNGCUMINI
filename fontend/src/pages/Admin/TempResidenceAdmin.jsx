// import React, { useEffect, useState } from "react";
// import api from "../../api/api";
// import { FaFilePdf, FaTrash } from "react-icons/fa";
// import "../../styles/admin/temp-residence.css";

// const TempResidenceAdmin = () => {
//   const [records, setRecords] = useState([]);
//   const [loading, setLoading] = useState(false);

//   useEffect(() => {
//     fetchRecords();
//   }, []);

//   // ‚úÖ L·∫•y danh s√°ch h·ªì s∆°
//   const fetchRecords = async () => {
//     setLoading(true);
//     try {
//       const token = localStorage.getItem("token");
//       const res = await api.get("/temp-residence", {
//         headers: { Authorization: `Bearer ${token}` },
//       });
//       setRecords(res.data || []);
//     } catch (err) {
//       console.error("fetchRecords", err);
//       alert("‚ùå L·ªói khi t·∫£i danh s√°ch h·ªì s∆°!");
//     } finally {
//       setLoading(false);
//     }
//   };

//   // ‚úÖ Xu·∫•t PDF
//   const handleExportPDF = async (id, fullName) => {
//     try {
//       const token = localStorage.getItem("token");
//       const res = await api.get(`/temp-residence/${id}/export`, {
//         headers: { Authorization: `Bearer ${token}` },
//         responseType: "blob",
//       });

//       const blob = new Blob([res.data], { type: "application/pdf" });
//       const link = document.createElement("a");
//       link.href = window.URL.createObjectURL(blob);
//       // üîπ D√πng t√™n file c√≥ t√™n c∆∞ d√¢n
//       const safeName = fullName
//         ?.normalize("NFD")
//         .replace(/[\u0300-\u036f]/g, "")
//         .replace(/[^a-zA-Z0-9_-]/g, "_");
//       link.download = `giay_tam_tru_tam_vang_${safeName}.pdf`;
//       link.click();
//     } catch (err) {
//       console.error("Export PDF error:", err);
//       alert("‚ùå L·ªói khi xu·∫•t PDF");
//     }
//   };

//   // ‚úÖ X√≥a h·ªì s∆°
//   const handleDelete = async (id) => {
//     if (!window.confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a h·ªì s∆° n√†y kh√¥ng?")) return;
//     try {
//       const token = localStorage.getItem("token");
//       await api.delete(`/temp-residence/${id}`, {
//         headers: { Authorization: `Bearer ${token}` },
//       });
//       alert("üóëÔ∏è ƒê√£ x√≥a h·ªì s∆° th√†nh c√¥ng!");
//       fetchRecords(); // load l·∫°i danh s√°ch
//     } catch (err) {
//       console.error("Delete error:", err);
//       alert("‚ùå X√≥a th·∫•t b·∫°i, vui l√≤ng th·ª≠ l·∫°i!");
//     }
//   };

//   return (
//     <div className="temp-admin">
//       <h2>üìã Qu·∫£n l√Ω T·∫°m tr√∫ / T·∫°m v·∫Øng</h2>

//       {loading ? (
//         <p className="loading-text">ƒêang t·∫£i d·ªØ li·ªáu...</p>
//       ) : records.length === 0 ? (
//         <p className="empty-text">Kh√¥ng c√≥ h·ªì s∆° n√†o.</p>
//       ) : (
//         <table className="temp-table">
//           <thead>
//             <tr>
//               <th>H·ªç t√™n</th>
//               <th>Lo·∫°i</th>
//               <th>Th·ªùi gian</th>
//               <th>L√Ω do</th>
//               <th>N∆°i ƒë·∫øn / t·∫°m tr√∫</th>
//               <th>H√†nh ƒë·ªông</th>
//             </tr>
//           </thead>
//           <tbody>
//             {records.map((r) => (
//               <tr key={r._id}>
//                 <td>{r.resident?.fullName || "‚Äî"}</td>
//                 <td className={r.type === "tam_tru" ? "tamtru" : "tamvang"}>
//                   {r.type === "tam_tru" ? "T·∫°m tr√∫" : "T·∫°m v·∫Øng"}
//                 </td>
//                 <td>
//                   {new Date(r.fromDate).toLocaleDateString("vi-VN")} ‚Üí{" "}
//                   {new Date(r.toDate).toLocaleDateString("vi-VN")}
//                 </td>
//                 <td>{r.reason}</td>
//                 <td>{r.place}</td>
//                 <td className="actions">
//                   <button
//                     className="export-btn"
//                     onClick={() => handleExportPDF(r._id, r.resident?.fullName)}
//                   >
//                     <FaFilePdf /> Xu·∫•t PDF
//                   </button>
//                   <button
//                     className="delete-btn"
//                     onClick={() => handleDelete(r._id)}
//                   >
//                     <FaTrash /> X√≥a
//                   </button>
//                 </td>
//               </tr>
//             ))}
//           </tbody>
//         </table>
//       )}
//     </div>
//   );
// };

// export default TempResidenceAdmin;


import React, { useEffect, useState } from "react";
import api from "../../api/api";
import { FaFilePdf, FaTrash } from "react-icons/fa";
import "../../styles/admin/temp-residence.css";
// ‚úÖ C√≥ th·ªÉ b·∫°n s·∫Ω c·∫ßn import CSS chung n·∫øu n√≥ kh√¥ng ƒë∆∞·ª£c import ·ªü n∆°i kh√°c.
// import "../../styles/admin/componentadmin.css"; 

const TempResidenceAdmin = () => {
  const [records, setRecords] = useState([]);
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    fetchRecords();
  }, []);

  // ‚úÖ L·∫•y danh s√°ch h·ªì s∆°
  const fetchRecords = async () => {
    setLoading(true);
    try {
      const token = localStorage.getItem("token");
      const res = await api.get("/temp-residence", {
        headers: { Authorization: `Bearer ${token}` },
      });
      setRecords(res.data || []);
    } catch (err) {
      console.error("fetchRecords", err);
      alert("‚ùå L·ªói khi t·∫£i danh s√°ch h·ªì s∆°!");
    } finally {
      setLoading(false);
    }
  };

  // ‚úÖ Xu·∫•t PDF
  const handleExportPDF = async (id, fullName) => {
    try {
      const token = localStorage.getItem("token");
      const res = await api.get(`/temp-residence/${id}/export`, {
        headers: { Authorization: `Bearer ${token}` },
        responseType: "blob",
      });

      const blob = new Blob([res.data], { type: "application/pdf" });
      const link = document.createElement("a");
      link.href = window.URL.createObjectURL(blob);
      // üîπ D√πng t√™n file c√≥ t√™n c∆∞ d√¢n
      const safeName = fullName
        ?.normalize("NFD")
        .replace(/[\u0300-\u036f]/g, "")
        .replace(/[^a-zA-Z0-9_-]/g, "_");
      link.download = `giay_tam_tru_tam_vang_${safeName}.pdf`;
      link.click();
    } catch (err) {
      console.error("Export PDF error:", err);
      alert("‚ùå L·ªói khi xu·∫•t PDF");
    }
  };

  // ‚úÖ X√≥a h·ªì s∆°
  const handleDelete = async (id) => {
    if (!window.confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a h·ªì s∆° n√†y kh√¥ng?")) return;
    try {
      const token = localStorage.getItem("token");
      await api.delete(`/temp-residence/${id}`, {
        headers: { Authorization: `Bearer ${token}` },
      });
      alert("üóëÔ∏è ƒê√£ x√≥a h·ªì s∆° th√†nh c√¥ng!");
      fetchRecords(); // load l·∫°i danh s√°ch
    } catch (err) {
      console.error("Delete error:", err);
      alert("‚ùå X√≥a th·∫•t b·∫°i, vui l√≤ng th·ª≠ l·∫°i!");
    }
  };

  return (
    // üí° ƒê·ªïi class t·ªïng th·ªÉ ƒë·ªÉ kh·ªõp v·ªõi ReportManagement
    <div className="resident-page fade-in"> 
      <h2 className="resident-title">üìã Qu·∫£n l√Ω T·∫°m tr√∫ / T·∫°m v·∫Øng</h2>

      {loading ? (
        <p className="loading-text">ƒêang t·∫£i d·ªØ li·ªáu...</p>
      ) : (
        // üí° B·ªçc b·∫£ng trong div c√≥ class resident-table
        <div className="resident-table"> 
          <table> {/* B·ªè className="temp-table" */}
            <thead>
              <tr>
                <th>H·ªç t√™n</th>
                <th>Lo·∫°i</th>
                <th>Th·ªùi gian</th>
                <th>L√Ω do</th>
                <th>N∆°i ƒë·∫øn / t·∫°m tr√∫</th>
                <th>H√†nh ƒë·ªông</th>
              </tr>
            </thead>
            <tbody>
              {records.length === 0 ? (
                <tr>
                  <td colSpan="6" className="no-data">
                    Kh√¥ng c√≥ h·ªì s∆° n√†o.
                  </td>
                </tr>
              ) : (
                records.map((r) => (
                  <tr key={r._id}>
                    <td>{r.resident?.fullName || "‚Äî"}</td>
                    <td>
                      {/* D√πng badge v√† class m√†u ƒë√£ ƒë·ªãnh nghƒ©a */}
                      <span
                        className={`badge ${
                          r.type === "tam_tru" ? "badge-blue" : "badge-yellow"
                        }`}
                      >
                        {r.type === "tam_tru" ? "T·∫°m tr√∫" : "T·∫°m v·∫Øng"}
                      </span>
                    </td>
                    <td>
                      {new Date(r.fromDate).toLocaleDateString("vi-VN")} ‚Üí{" "}
                      {new Date(r.toDate).toLocaleDateString("vi-VN")}
                    </td>
                    <td>{r.reason}</td>
                    <td>{r.place}</td>
                    {/* üí° D√πng class action-buttons cho td ch·ª©a n√∫t */}
                    <td className="action-buttons"> 
                      <button
                        // üí° D√πng btn-edit ho·∫∑c m·ªôt class chung cho n√∫t icon nh·ªè
                        className="btn-edit" 
                        onClick={() => handleExportPDF(r._id, r.resident?.fullName)}
                        title="Xu·∫•t PDF"
                      >
                        {/* FaFilePdf s·∫Ω ho·∫°t ƒë·ªông nh∆∞ m·ªôt SVG */}
                        <FaFilePdf className="h-5 w-5 text-red-600" /> 
                      </button>
                      <button
                        // üí° D√πng btn-delete ho·∫∑c m·ªôt class chung cho n√∫t icon nh·ªè
                        className="btn-delete" 
                        onClick={() => handleDelete(r._id)}
                        title="X√≥a h·ªì s∆°"
                      >
                        {/* FaTrash s·∫Ω ho·∫°t ƒë·ªông nh∆∞ m·ªôt SVG */}
                        <FaTrash className="h-5 w-5 text-gray-600" />
                      </button>
                    </td>
                  </tr>
                ))
              )}
            </tbody>
          </table>
        </div>
      )}
    </div>
  );
};

export default TempResidenceAdmin;